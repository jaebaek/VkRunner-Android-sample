#!/bin/bash

THIS_PROGRAM=$0
ROOT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" >/dev/null && pwd )"

VKRUNNER_PATH=external/vkrunner

PRECOMPILE_PROGRAM=$VKRUNNER_PATH/precompile-script.py

OUTPUT_DIR=app
OUTPUT=$OUTPUT_DIR/string_scripts.inc

function generate() {
  script_dir=$1
  script=$2
  OUTPUT_BASE_DIR=${script_dir##*/}
  BUILD_DIR=$OUTPUT_DIR/$OUTPUT_BASE_DIR

  echo
  echo
  echo Processing $BUILD_DIR/$script

  mkdir -p $BUILD_DIR

  header=`echo ${script//\./_} | tr a-z A-Z`_H  # replace . to _ and
                                                # make it upper case string
  header=${header//-/_}

  tmp=$BUILD_DIR/$script.tmp
  $PRECOMPILE_PROGRAM $script_dir/$script -o $tmp

  echo \#ifndef $header > $BUILD_DIR/$script
  echo \#define $header >> $BUILD_DIR/$script

  echo \"$BUILD_DIR/$script\", >> $BUILD_DIR/$script

  echo R\"\( >> $BUILD_DIR/$script
  cat $tmp >> $BUILD_DIR/$script
  echo \)\", >> $BUILD_DIR/$script

  echo \#endif >> $BUILD_DIR/$script
  rm $tmp

  echo \#include \"$OUTPUT_BASE_DIR/$script\" >> $OUTPUT
}

function generate_dir() {
  INITIAL_SCRIPT_DIR=`realpath --relative-to=$PWD $1`
  INITIAL_SCRIPTS=`ls $INITIAL_SCRIPT_DIR`

  echo "// Generated by $THIS_PROGRAM based on scripts in $INITIAL_SCRIPT_DIR." >> $OUTPUT

  for target in $INITIAL_SCRIPTS
  do
    generate $INITIAL_SCRIPT_DIR $target
  done
}

if [[ ! -z $1 ]]; then
  target=$1
  echo "// Generated by $THIS_PROGRAM based on scripts in $target." > $OUTPUT
  target_dir="$(dirname "$target")"
  target=${target##*/}
  generate $target_dir $target
else
  rm -f $OUTPUT
  generate_dir $ROOT_DIR/vkrunner_scripts
  generate_dir $VKRUNNER_PATH/examples
fi

echo
echo
echo See \"$OUTPUT\" and files in \"$OUTPUT_DIR\"
