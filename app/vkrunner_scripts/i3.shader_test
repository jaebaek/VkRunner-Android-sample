#ifndef I3_SHADER_TEST_H
#define I3_SHADER_TEST_H
"app/vkrunner_scripts/i3.shader_test",
R"(
[comment]
Source code in OpenCL C:

kernel void main(global float *out, float x, float y) {

  int first_result;

  if (y >= 1.1f) {
    if (x > 0) {
      first_result = 0;
    } else {
      first_result = 1;
    }
  } else if (y >= 1.2f) {
    if (x > 0) {
      first_result = 2;
    } else {
      first_result = 3;
    }
  } else {
    if (y + 1.0f > 0) {
      first_result = 4;
    } else {
      first_result = 5;
    }
  }

  float fr = (float)(first_result);

  float result = -1.0f;
  if (fr == 0)
    result = 1.0f;
  else if (fr == 1)
    result = 0.0f;
  else if (fr == 2)
    result = 2.0f;

  *out = result;
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = 8638849b2167fcba90dbff0ee4cfe7dbf0380d24

[compute shader binary]
7230203 10200 70000 72 0 20011 1 20011 115a b000a 5f565053 5f52484b 726f7473
5f656761 66667562 735f7265 61726f74 635f6567 7373616c 0 8000a 5f565053 5f52484b
69726176 656c6261 696f705f 7265746e 73 3000e 0 1 5000f 5 1 6e69616d 0 30003 3 78
40047 2 1 0 40047 3 1 1 40047 4 1 2 40047 5 6 4 50048 6 0 23 0 30047 6 2 50048 7
0 23 0 30047 7 2 40047 8 b 19 40047 9 22 0 40047 9 21 0 40047 a 22 0 40047 a 21
1 40047 b 22 0 40047 b 21 2 30016 c 20 3001d 5 c 3001e 6 5 40020 d c 6 3001e 7 c
40020 e c 7 20013 f 30021 10 f 40015 11 20 0 40020 12 c c 20014 13 40017 14 11 3
40020 15 6 14 4002b 11 16 0 4002b 11 17 1 4002b c 18 3f8ccccd 4002b c 19 0 30001
11 1a 3002a 13 1b 30029 13 1c 4002b 11 1d 2 4002b c 1e 40000000 30001 c 1f 4002b
c 20 3f800000 4002b c 21 bf800000 4002b c 22 3f99999a 4002b 11 23 3 4002b 11 24
4 4002b 11 25 5 40032 11 2 1 40032 11 3 1 40032 11 4 1 60033 14 8 2 3 4 5003b 15
26 6 8 4003b d 9 c 4003b e a c 4003b e b c 50036 f 1 0 10 200f8 27 60041 12 28 9
16 16 50041 12 29 a 16 4003d c 2a 29 50041 12 2b b 16 4003d c 2c 2b 500b9 13 2d
2c 18 400a8 13 2e 2d 300f7 2f 0 400fa 2e 30 2f 200f8 30 500bd 13 31 2a 19 600a9
11 32 31 17 16 200f9 2f 200f8 2f 700f5 13 33 1b 30 1c 27 700f5 11 34 32 30 1a 27
300f7 35 0 400fa 33 36 35 200f8 35 700f5 11 37 34 2f 38 39 200f9 3a 200f8 3a
500b1 13 3b 37 17 400a8 13 3c 3b 300f7 3d 0 400fa 3c 3e 3d 200f8 3e 500b1 13 3f
37 1d 400a8 13 40 3f 300f7 41 0 400fa 40 42 41 200f8 42 500aa 13 43 37 1d 300f7
44 0 400fa 43 45 44 200f8 45 200f9 44 200f8 44 700f5 13 46 1b 45 1c 42 700f5 13
47 1c 45 1b 42 700f5 c 48 1e 45 1f 42 200f9 41 200f8 41 700f5 13 49 46 44 1b 3e
700f5 13 4a 47 44 1b 3e 700f5 13 4b 1b 44 1c 3e 700f5 c 4c 48 44 1f 3e 200f9 3d
200f8 3d 700f5 13 4d 1b 41 1c 3a 700f5 13 4e 49 41 1b 3a 700f5 13 4f 4a 41 1b 3a
700f5 13 50 4b 41 1b 3a 700f5 c 51 4c 41 1f 3a 700f5 c 52 19 41 1f 3a 300f7 53 0
400fa 4d 54 53 200f8 53 700f5 13 55 56 54 4e 3d 700f5 c 57 20 54 1f 3d 300f7 58
0 400fa 55 59 58 200f8 58 700f5 13 5a 1c 59 4f 53 700f5 c 5b 21 59 51 53 300f7
5c 0 400fa 5a 5d 5c 200f8 5c 700f5 13 5e 1c 5d 50 58 700f5 c 5f 60 5d 52 58
300f7 61 0 400fa 5e 62 61 200f8 61 700f5 c 63 57 5c 64 62 3003e 28 63 100fd
200f8 62 500f5 c 64 5f 5c 200f9 61 200f8 5d 500f5 c 60 5b 58 200f9 5c 200f8 59
200f9 58 200f8 54 500aa 13 65 37 16 400a8 13 56 65 200f9 53 200f8 36 500b9 13 66
2c 22 400a8 13 67 66 300f7 68 0 400fa 67 69 68 200f8 69 500ba 13 6a 2a 19 600a9
11 6b 6a 1d 23 200f9 68 200f8 68 700f5 13 6c 1b 69 1c 36 700f5 11 6d 6b 69 1a 36
300f7 39 0 400fa 6c 6e 39 200f8 39 700f5 11 38 6f 6e 6d 68 200f9 35 200f8 6e
50081 c 70 2c 20 500ba 13 71 70 19 600a9 11 6f 71 24 25 200f9 39 10038

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 subdata float 0 -10.0 -10.0 -10.0 -10.0
ssbo 1 subdata float 0 0.2
ssbo 2 subdata float 0 1.5

compute 3 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo float 0 0 < 1.00001
probe ssbo float 0 0 > 0.99999
)",
#endif
