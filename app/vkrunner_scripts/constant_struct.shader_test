#ifndef CONSTANT_STRUCT_SHADER_TEST_H
#define CONSTANT_STRUCT_SHADER_TEST_H
"app/vkrunner_scripts/constant_struct.shader_test",
R"(
[comment]
Source code in OpenCL C:

typedef struct { int arr[2]; } S1;
typedef struct { S1 s1; int a; S1 s2; } S2;

S2 make_s2(int n) {
    S2 s2;
    s2.s1.arr[0] = n;
    s2.s1.arr[1] = n;
    s2.a = n;
    s2.s2.arr[0] = n;
    s2.s2.arr[1] = n;
    return s2;
}

S2 choose(int n) {
    if (n > 0) return make_s2(n - 5);
    return make_s2(0);
}

kernel void foo(global S2 *data, int n) {
    *data = choose(n);
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = 8638849b2167fcba90dbff0ee4cfe7dbf0380d24

[compute shader binary]
7230203 10200 70000 47 0 20011 1 20011 115a b000a 5f565053 5f52484b 726f7473
5f656761 66667562 735f7265 61726f74 635f6567 7373616c 0 8000a 5f565053 5f52484b
69726176 656c6261 696f705f 7265746e 73 3000e 0 1 5000f 5 1 6e69616d 0 30003 3 78
40047 2 1 0 40047 3 1 1 40047 4 1 2 50048 5 0 23 0 50048 6 0 23 0 50048 6 1 23 8
50048 6 2 23 c 40047 7 6 14 50048 8 0 23 0 30047 8 2 50048 9 0 23 0 30047 9 2
40047 a b 19 40047 b 22 0 40047 b 21 0 40047 c 22 0 40047 c 21 1 40047 d 6 4
40015 e 20 0 4002b e f 2 4001c d e f 3001e 5 d 5001e 6 5 e 5 3001d 7 6 3001e 8 7
40020 10 c 8 3001e 9 e 40020 11 c 9 20013 12 30021 13 12 40020 14 c e 40021 15 6
e 20014 16 40017 17 e 3 40020 18 6 17 4002b e 19 0 4002b e 1a 1 30001 6 1b 3002a
16 1c 30029 16 1d 4002b e 1e fffffffb 40032 e 2 1 40032 e 3 1 40032 e 4 1 60033
17 a 2 3 4 5003b 18 1f 6 a 4003b 10 b c 4003b 11 c c 50036 6 20 8 15 30037 e 21
200f8 22 50050 d 23 21 21 40050 5 24 23 60050 6 25 24 21 24 200fe 25 10038 50036
6 26 8 15 30037 e 27 200f8 28 500ad 16 29 27 19 400a8 16 2a 29 300f7 2b 0 400fa
2a 2c 2b 200f8 2c 50039 6 2d 20 19 200f9 2b 200f8 2b 700f5 16 2e 1c 2c 1d 28
700f5 6 2f 2d 2c 1b 28 300f7 30 0 400fa 2e 31 30 200f8 30 700f5 6 32 2f 2b 33 31
200fe 32 200f8 31 50080 e 34 27 1e 50039 6 33 20 34 200f9 30 10038 50036 12 1 0
13 200f8 35 50041 14 36 c 19 4003d e 37 36 50039 6 38 26 37 50051 5 39 38 0
50051 d 3a 39 0 50051 e 3b 3a 0 50051 e 3c 3a 1 50051 e 3d 38 1 50051 5 3e 38 2
50051 d 3f 3e 0 50051 e 40 3f 0 50051 e 41 3f 1 90041 14 42 b 19 19 19 19 19
3003e 42 3b 90041 14 43 b 19 19 19 19 1a 3003e 43 3c 70041 14 44 b 19 19 1a
3003e 44 3d 90041 14 45 b 19 19 f 19 19 3003e 45 40 90041 14 46 b 19 19 f 19 1a
3003e 46 41 100fd 10038

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 subdata int 0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
ssbo 1 subdata int 0 13

compute 3 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo int 0 0 == 8
probe ssbo int 0 1 == 8
probe ssbo int 0 2 == 8
probe ssbo int 0 3 == 8
probe ssbo int 0 4 == 8
)",
#endif
