#ifndef NESTED_STRUCT_SHADER_TEST_H
#define NESTED_STRUCT_SHADER_TEST_H
"app/vkrunner_scripts/nested_struct.shader_test",
R"(
[comment]
Source code in OpenCL C:

typedef struct { int arr[2]; } S1;
typedef struct { S1 s1; int a; S1 s2; } S2;

S2 make_s2(int n) {
    S2 s2;
    s2.s1.arr[0] = n;
    s2.s1.arr[1] = n+1;
    s2.a = n+2;
    s2.s2.arr[0] = n+3;
    s2.s2.arr[1] = n+4;
    return s2;
}

S2 choose(int n) {
    if (n > 0) return make_s2(n - 5);
    return make_s2(n + 10);
}

kernel void foo(global S2 *data, int n) {
    *data = choose(n);
}

The following SPIR-V code was generated by CLSPV with -cl-opt-disable option.
GIT_COMMIT = 8638849b2167fcba90dbff0ee4cfe7dbf0380d24

[compute shader binary]
7230203 10200 70000 51 0 20011 1 20011 115a b000a 5f565053 5f52484b 726f7473
5f656761 66667562 735f7265 61726f74 635f6567 7373616c 0 8000a 5f565053 5f52484b
69726176 656c6261 696f705f 7265746e 73 3000e 0 1 5000f 5 1 6e69616d 0 30003 3 78
40047 2 1 0 40047 3 1 1 40047 4 1 2 50048 5 0 23 0 50048 6 0 23 0 50048 6 1 23 8
50048 6 2 23 c 40047 7 6 14 50048 8 0 23 0 30047 8 2 50048 9 0 23 0 30047 9 2
40047 a b 19 40047 b 22 0 40047 b 21 0 40047 c 22 0 40047 c 21 1 40047 d 6 4
40015 e 20 0 4002b e f 2 4001c d e f 3001e 5 d 5001e 6 5 e 5 3001d 7 6 3001e 8 7
40020 10 c 8 3001e 9 e 40020 11 c 9 20013 12 30021 13 12 40020 14 c e 40021 15 6
e 20014 16 40017 17 e 3 40020 18 6 17 4002b e 19 0 4002b e 1a 1 4002b e 1b 3
4002b e 1c 4 4002b e 1d a 30001 6 1e 3002a 16 1f 30029 16 20 4002b e 21 fffffffb
40032 e 2 1 40032 e 3 1 40032 e 4 1 60033 17 a 2 3 4 5003b 18 22 6 a 4003b 10 b
c 4003b 11 c c 50036 6 23 8 15 30037 e 24 200f8 25 50080 e 26 24 1a 50080 e 27
24 f 50080 e 28 24 1b 50080 e 29 24 1c 50050 d 2a 24 26 40050 5 2b 2a 50050 d 2c
28 29 40050 5 2d 2c 60050 6 2e 2b 27 2d 200fe 2e 10038 50036 6 2f 8 15 30037 e
30 200f8 31 500ad 16 32 30 19 400a8 16 33 32 300f7 34 0 400fa 33 35 34 200f8 35
50080 e 36 30 1d 50039 6 37 23 36 200f9 34 200f8 34 700f5 16 38 1f 35 20 31
700f5 6 39 37 35 1e 31 300f7 3a 0 400fa 38 3b 3a 200f8 3a 700f5 6 3c 39 34 3d 3b
200fe 3c 200f8 3b 50080 e 3e 30 21 50039 6 3d 23 3e 200f9 3a 10038 50036 12 1 0
13 200f8 3f 50041 14 40 c 19 4003d e 41 40 50039 6 42 2f 41 50051 5 43 42 0
50051 d 44 43 0 50051 e 45 44 0 50051 e 46 44 1 50051 e 47 42 1 50051 5 48 42 2
50051 d 49 48 0 50051 e 4a 49 0 50051 e 4b 49 1 90041 14 4c b 19 19 19 19 19
3003e 4c 45 90041 14 4d b 19 19 19 19 1a 3003e 4d 46 70041 14 4e b 19 19 1a
3003e 4e 47 90041 14 4f b 19 19 f 19 19 3003e 4f 4a 90041 14 50 b 19 19 f 19 1a
3003e 50 4b 100fd 10038

[require]
VK_KHR_storage_buffer_storage_class
VK_KHR_variable_pointers

[test]
# ssbo [bind] subdata [type] [offset] [values ...]
ssbo 0 subdata int 0  0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
ssbo 1 subdata int 0 13

compute 3 1 1

# probe ssbo [type] [bind] [offset] == [values ...]
probe ssbo int 0 0 == 8
probe ssbo int 0 1 == 9
probe ssbo int 0 2 == 10
probe ssbo int 0 3 == 11
probe ssbo int 0 4 == 12
)",
#endif
