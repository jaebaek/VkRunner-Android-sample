#ifndef COMPUTE_SHADER_SHADER_TEST_H
#define COMPUTE_SHADER_SHADER_TEST_H
"app/examples/compute-shader.shader_test",
R"(
[compute shader binary]
7230203 10000 80004 24 0 20011 1 6000b 1 4c534c47 6474732e 3035342e 0 3000e 0 1
7000f 5 4 6e69616d 0 11 19 60010 4 11 1 1 1 30003 2 1c2 40005 4 6e69616d 0 40005
9 636f6c62 6b 50006 9 0 756c6176 7365 30005 b 0 60005 11 575f6c67 476b726f
70756f72 4449 70005 19 4e5f6c67 6f576d75 72476b72 7370756f 0 40047 8 6 8 50048 9
0 23 0 30047 9 3 40047 b 22 0 40047 b 21 3 40047 11 b 1a 40047 19 b 18 20013 2
30021 3 2 30016 6 20 40017 7 6 2 3001d 8 7 3001e 9 8 40020 a 2 9 4003b a b 2
40015 c 20 1 4002b c d 0 40015 e 20 0 40017 f e 3 40020 10 1 f 4003b 10 11 1
4002b e 12 0 40020 13 1 e 4002b e 16 1 4003b 10 19 1 40017 1e e 2 40020 22 2 7
50036 2 4 0 3 200f8 5 50041 13 14 11 12 4003d e 15 14 50041 13 17 11 16 4003d e
18 17 50041 13 1a 19 12 4003d e 1b 1a 50084 e 1c 18 1b 50080 e 1d 15 1c 4003d f
1f 11 7004f 1e 20 1f 1f 0 1 40070 7 21 20 60041 22 23 b d 1d 3003e 23 21 100fd
10038

[test]
# Set the buffer at binding 3 to be large enough to hold 256x256 vec2s
ssbo 3 524288

# Use the compute shader to fill each vec2 with its grid position
compute 256 256 1

# Probe a few points in the buffer

# Four corners of the grid
probe ssbo vec2 3 0 == 0 0
probe ssbo vec2 3 2040 == 255 0
probe ssbo vec2 3 522240 == 0 255
probe ssbo vec2 3 524280 == 255 255

# Center
probe ssbo vec2 3 263168 == 128 128
)",
#endif
